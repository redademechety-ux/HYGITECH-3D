# Docker Compose pour Production HYGITECH-3D
version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:5.0
    container_name: hygitech_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-secure_password}
      MONGO_INITDB_DATABASE: ${MONGO_DB:-hygitech3d_production}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./mongodb-init:/docker-entrypoint-initdb.d
    ports:
      - "27017:27017"
    networks:
      - hygitech_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    container_name: hygitech_backend
    restart: unless-stopped
    environment:
      MONGO_URL: mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD:-secure_password}@mongodb:27017/${MONGO_DB:-hygitech3d_production}?authSource=admin
      DB_NAME: ${MONGO_DB:-hygitech3d_production}
      ENVIRONMENT: production
    volumes:
      - ./backend/logs:/app/logs
    ports:
      - "8001:8001"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - hygitech_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.production
      args:
        REACT_APP_BACKEND_URL: https://${DOMAIN:-localhost}
    container_name: hygitech_frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - hygitech_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backup Service
  backup:
    image: mongo:5.0
    container_name: hygitech_backup
    restart: "no"
    environment:
      MONGO_ROOT_USER: ${MONGO_ROOT_USER:-admin}
      MONGO_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-secure_password}
      MONGO_DB: ${MONGO_DB:-hygitech3d_production}
    volumes:
      - ./backups:/backups
      - ./scripts:/scripts
    depends_on:
      - mongodb
    networks:
      - hygitech_network
    command: /scripts/backup-cron.sh

networks:
  hygitech_network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local